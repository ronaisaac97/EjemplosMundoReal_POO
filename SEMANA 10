import os

class Producto:
    def __init__(self, codigo, nombre, cantidad, precio):
        self.codigo = codigo
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio
    
    def __str__(self):
        return f"{self.codigo},{self.nombre},{self.cantidad},{self.precio}"
    
    @staticmethod
    def from_string(data):
        try:
            codigo, nombre, cantidad, precio = data.strip().split(',')
            return Producto(codigo, nombre, int(cantidad), float(precio))
        except ValueError:
            print("Error al leer un producto del archivo. Formato incorrecto.")
            return None

class Inventario:
    def __init__(self, archivo="inventario.txt"):
        self.archivo = archivo
        self.productos = {}
        self.cargar_desde_archivo()

    def cargar_desde_archivo(self):
        if not os.path.exists(self.archivo):
            print("No se encontró el archivo de inventario. Creando uno nuevo...")
            return
        try:
            with open(self.archivo, "r") as file:
                for linea in file:
                    producto = Producto.from_string(linea)
                    if producto:
                        self.productos[producto.codigo] = producto
            print("Inventario cargado exitosamente.")
        except (FileNotFoundError, PermissionError) as e:
            print(f"Error al cargar el archivo de inventario: {e}")
    
    def guardar_en_archivo(self):
        try:
            with open(self.archivo, "w") as file:
                for producto in self.productos.values():
                    file.write(str(producto) + "\n")
        except PermissionError:
            print("No tienes permisos para escribir en el archivo de inventario.")
    
    def agregar_producto(self, producto):
        if producto.codigo in self.productos:
            print("El producto ya existe en el inventario.")
        else:
            self.productos[producto.codigo] = producto
            self.guardar_en_archivo()
            print("Producto agregado correctamente.")
    
    def actualizar_producto(self, codigo, nueva_cantidad, nuevo_precio):
        if codigo in self.productos:
            self.productos[codigo].cantidad = nueva_cantidad
            self.productos[codigo].precio = nuevo_precio
            self.guardar_en_archivo()
            print("Producto actualizado correctamente.")
        else:
            print("Producto no encontrado.")
    
    def eliminar_producto(self, codigo):
        if codigo in self.productos:
            del self.productos[codigo]
            self.guardar_en_archivo()
            print("Producto eliminado correctamente.")
        else:
            print("Producto no encontrado.")
    
    def mostrar_inventario(self):
        if not self.productos:
            print("El inventario está vacío.")
        else:
            print("Inventario actual:")
            for producto in self.productos.values():
                print(f"Código: {producto.codigo}, Nombre: {producto.nombre}, Cantidad: {producto.cantidad}, Precio: ${producto.precio}")

if __name__ == "__main__":
    inventario = Inventario()
    
    while True:
        print("\nMenú de Gestión de Inventario")
        print("1. Agregar producto")
        print("2. Actualizar producto")
        print("3. Eliminar producto")
        print("4. Mostrar inventario")
        print("5. Salir")
        
        opcion = input("Seleccione una opción: ")
        
        if opcion == "1":
            codigo = input("Ingrese código del producto: ")
            nombre = input("Ingrese nombre del producto: ")
            cantidad = int(input("Ingrese cantidad: "))
            precio = float(input("Ingrese precio: "))
            producto = Producto(codigo, nombre, cantidad, precio)
            inventario.agregar_producto(producto)
        elif opcion == "2":
            codigo = input("Ingrese código del producto a actualizar: ")
            nueva_cantidad = int(input("Ingrese nueva cantidad: "))
            nuevo_precio = float(input("Ingrese nuevo precio: "))
            inventario.actualizar_producto(codigo, nueva_cantidad, nuevo_precio)
        elif opcion == "3":
            codigo = input("Ingrese código del producto a eliminar: ")
            inventario.eliminar_producto(codigo)
        elif opcion == "4":
            inventario.mostrar_inventario()
        elif opcion == "5":
            print("Saliendo del programa...")
            break
        else:
            print("Opción no válida, intente de nuevo.")
