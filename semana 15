import tkinter as tk
from tkinter import ttk, messagebox

class TodoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Lista de Tareas")
        self.root.geometry("500x400")
        self.root.resizable(False, False)
        
        self.style = ttk.Style()
        self.style.configure("TButton", padding=6, relief="flat")
        self.style.configure("Completed.TLabel", foreground="gray", font=('Arial', 10, 'overstrike'))
        self.tasks = []
        self.create_widgets()
        
    def create_widgets(self):
        # Frame principal
        main_frame = ttk.Frame(self.root, padding="10")
        main_frame.pack(fill=tk.BOTH, expand=True)
        
        self.task_entry = ttk.Entry(main_frame, width=40)
        self.task_entry.grid(row=0, column=0, padx=5, pady=5, sticky=tk.EW)
        self.task_entry.bind("<Return>", lambda e: self.add_task())
        
        # Bot칩n A침adir
        add_btn = ttk.Button(main_frame, text="A침adir Tarea", command=self.add_task)
        add_btn.grid(row=0, column=1, padx=5, pady=5)
        
        # Lista de tareas
        self.task_listbox = tk.Listbox(
            main_frame, 
            height=15, 
            selectmode=tk.SINGLE,
            activestyle="none",
            font=('Arial', 10)
        )
        self.task_listbox.grid(row=1, column=0, columnspan=2, padx=5, pady=10, sticky=tk.NSEW)
        
       
        scrollbar = ttk.Scrollbar(main_frame, orient=tk.VERTICAL, command=self.task_listbox.yview)
        scrollbar.grid(row=1, column=2, sticky=tk.NS)
        self.task_listbox.config(yscrollcommand=scrollbar.set)
        
        btn_frame = ttk.Frame(main_frame)
        btn_frame.grid(row=2, column=0, columnspan=2, pady=5)
        
        complete_btn = ttk.Button(btn_frame, text="Marcar como Completada", command=self.complete_task)
        complete_btn.pack(side=tk.LEFT, padx=5)
        
      
        delete_btn = ttk.Button(btn_frame, text="Eliminar Tarea", command=self.delete_task)
        delete_btn.pack(side=tk.LEFT, padx=5)
        main_frame.columnconfigure(0, weight=1)
        main_frame.rowconfigure(1, weight=1)
    
        self.task_listbox.bind("<Double-Button-1>", lambda e: self.complete_task())
    
    def add_task(self):
        task_text = self.task_entry.get().strip()
        if task_text:
            self.tasks.append({"text": task_text, "completed": False})
            self.update_task_list()
            self.task_entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Advertencia", "Por favor ingresa una tarea v치lida.")
    
    def complete_task(self):
        selected_index = self.task_listbox.curselection()
        if selected_index:
            index = selected_index[0]
            self.tasks[index]["completed"] = not self.tasks[index]["completed"]
            self.update_task_list()
    
    def delete_task(self):
        selected_index = self.task_listbox.curselection()
        if selected_index:
            index = selected_index[0]
            del self.tasks[index]
            self.update_task_list()
    
    def update_task_list(self):
        self.task_listbox.delete(0, tk.END)
        for task in self.tasks:
            if task["completed"]:
                self.task_listbox.insert(tk.END, task["text"])
                self.task_listbox.itemconfig(tk.END, {'fg': 'gray'})
            else:
                self.task_listbox.insert(tk.END, task["text"])
                self.task_listbox.itemconfig(tk.END, {'fg': 'black'})

if __name__ == "__main__":
    root = tk.Tk()
    app = TodoApp(root)
    root.mainloop()
